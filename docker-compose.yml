version: "3.8"

services:

  db:
    container_name: postgres
    image: postgres
    command: ["-p", "${POSTGRES_DB_PORT}"]
    expose:
      - "${POSTGRES_DB_PORT}"
    restart: 'always'
    environment:
      - 'POSTGRES_PASSWORD=${POSTGRES_DB_PASSWORD}'
      - 'POSTGRES_DB=${POSTGRES_DB_USER}'
      - 'POSTGRES_USER=${POSTGRES_DB_USER}'
#    volumes:
#      - ./postgres:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: 'redis:latest'
    restart: 'always'
    environment:
      - 'REDIS_HOST=redis'
      - 'REDIS_PORT=${PORT_REDIS}'
    ports:
      - '${PORT_REDIS}:6379'
#    volumes:
#      - '$PWD/redis.conf:/usr/local/etc/redis/redis.conf'
    command:
      - 'redis-server'
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]

  api:
    container_name: fast_api
    build:
      context: .
      dockerfile: Dockerfile
    restart: 'always'
    env_file:
      - docker-for.env
    environment:
      - 'API_REDIS_HOST=redis'
    command: ["sh", "/app/bash/app.sh"]
    ports:
      - '${FAST_API_PORT}:8000'
    depends_on:
      - db
      - redis

  celery:
    build:
      context: .
    container_name: celery_app
    env_file:
      - docker-for.env
    command: ["/app/bash/celery.sh", "celery"]
    depends_on:
      - redis

  flower:
    build:
      context: .
    container_name: flower_app
    env_file:
      - docker-for.env
    command: ["/app/bash/celery.sh", "flower"]
    depends_on:
      - redis
      - celery
    ports:
      - '${FLOWER_PORT}:5555'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      - 'GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}'
      - 'GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}'
      - 'GF_USERS_ALLOW_SIGN_UP=false'
    ports:
      - "${GRAFANA_PORT}:3000"
#    volumes:
#      - grafana_data:/var/lib/grafana

#  volumes:
#    prometheus_data:
#      driver: local
#      driver_opts:
#        o: bind
#        type: none
#        device: ./prometheus_data
#    grafana_data:
#      driver: local
#      driver_opts:
#        o: bind
#        type: none
#        device: ./grafana_data
